
// Poll for new reports every 2 seconds
setInterval(loadQueuedReports, 2000);

// Load reports on page load
document.addEventListener('DOMContentLoaded', () => {
    // Remove the default "Nothing here!" box if it exists
    const existingReportBox = document.querySelector('.report_box');
    if (existingReportBox) {
        existingReportBox.remove();
    }
    
    // Load any queued reports
    loadQueuedReports();
});




// Report management system
class ReportManager {
    constructor() {
        this.reports = [];
        this.container = document.body;
    }

    // Create a new report box
    createReportBox(title = "Report", content = "", source = null) {
        const reportBox = document.createElement('div');
        reportBox.className = 'report_box';
        
        const textDiv = document.createElement('div');
        textDiv.className = 'text';
        
        const heading = document.createElement('h1');
        heading.textContent = title;
        
        const paragraph = document.createElement('p');
        paragraph.textContent = content;
        
        textDiv.appendChild(heading);
        textDiv.appendChild(paragraph);
        
        const sourceButton = document.createElement('div');
        sourceButton.className = 'source_button';
        const sourceText = document.createElement('p');
        sourceText.textContent = 'Source';
        sourceButton.appendChild(sourceText);
        
        // Add click handler for source button
        if (source) {
            sourceButton.style.cursor = 'pointer';
            sourceButton.addEventListener('click', () => {
                this.showSource(source);
            });
        }
        
        reportBox.appendChild(textDiv);
        reportBox.appendChild(sourceButton);
        
        this.container.appendChild(reportBox);
        this.reports.push({ element: reportBox, textDiv: textDiv, source: source });
        
        return reportBox;
    }

    // Write content to a specific report box
    writeToReport(reportIndex, title, content) {
        if (reportIndex < 0 || reportIndex >= this.reports.length) {
            console.error('Invalid report index');
            return false;
        }
        
        const report = this.reports[reportIndex];
        const textDiv = report.textDiv;
        
        // Update heading
        const heading = textDiv.querySelector('h1');
        if (heading) {
            heading.textContent = title;
        }
        
        // Update paragraph
        const paragraph = textDiv.querySelector('p');
        if (paragraph) {
            paragraph.textContent = content;
        }
        
        return true;
    }

    // Write to the most recent report box
    writeToLatestReport(title, content) {
        if (this.reports.length === 0) {
            console.error('No reports available');
            return false;
        }
        return this.writeToReport(this.reports.length - 1, title, content);
    }

    // Add additional paragraphs to a report
    appendToReport(reportIndex, content) {
        if (reportIndex < 0 || reportIndex >= this.reports.length) {
            console.error('Invalid report index');
            return false;
        }
        
        const report = this.reports[reportIndex];
        const textDiv = report.textDiv;
        
        const paragraph = document.createElement('p');
        paragraph.textContent = content;
        textDiv.appendChild(paragraph);
        
        return true;
    }

    // Show source information
    showSource(source) {
        alert(`Source: ${source}`);
    }

    // Clear all reports
    clearReports() {
        this.reports.forEach(report => {
            report.element.remove();
        });
        this.reports = [];
    }

    // Get total number of reports
    getReportCount() {
        return this.reports.length;
    }
}

// Initialize the report manager
const reportManager = new ReportManager();

// Example usage functions
function addReport(title, content, source) {
    return reportManager.createReportBox(title, content, source);
}

function updateReport(index, title, content) {
    return reportManager.writeToReport(index, title, content);
}

function updateLatestReport(title, content) {
    return reportManager.writeToLatestReport(title, content);
}

function appendContent(index, content) {
    return reportManager.appendToReport(index, content);
}

function clearAllReports() {
    return reportManager.clearReports();
}

// Example: Create a sample report on page load
document.addEventListener('DOMContentLoaded', () => {
    // Remove the default "Nothing here!" box if it exists
    const existingReportBox = document.querySelector('.report_box');
    if (existingReportBox) {
        existingReportBox.remove();
    }
    
    // Uncomment the line below to create a sample report
    addReport('Sample Report', 'This is a sample report generated by the IBAT assistant.', 'https://example.com');
});
// Track the last state to avoid unnecessary refreshes
let lastReportState = null;

function loadQueuedReports() {
    fetch('/api/get-reports')
        .then(response => response.json())
        .then(data => {
            // Create a hash of current data to compare
            const currentState = JSON.stringify(data);
            
            // Only update if data has changed
            if (currentState !== lastReportState) {
                lastReportState = currentState;
                
                // Clear existing reports
                clearAllReports();
                
                // Add NCBI reports
                if (data.ncbi_queries && data.ncbi_queries.length > 0) {
                    data.ncbi_queries.forEach(query => {
                        addReport(query.title, 'NCBI Research Paper', query.link);
                    });
                }
                
                // Add OSDR reports
                if (data.osdr_queries && data.osdr_queries.length > 0) {
                    data.osdr_queries.forEach(query => {
                        addReport(query.title, 'NASA OSDR Study', query.link);
                    });
                }
                
                console.log(`Updated reports: ${data.ncbi_queries.length} NCBI + ${data.osdr_queries.length} OSDR`);
            }
        })
        .catch(error => console.error('Error loading reports:', error));
}

// Poll every 2 seconds
setInterval(loadQueuedReports, 2000);

// Load on page load
document.addEventListener('DOMContentLoaded', loadQueuedReports);